---
type Props = {
  data: {
    media: string;
    title: string;
    slug: string;
  }[][];
};

const { data } = Astro.props;
---

<div class="container relative grid grid-cols-3 gap-8 overflow-y-hidden">
  {
    data.map((part, index) => {
      const className = index === 1 ? "flex-col" : "flex-col-reverse column-reverse";
      return (
        <div class={`flex ${className} py-[10vh]`}>
          {part.map((item) => {
            const mediaArray: string[] = JSON.parse(item.media);
            const firstImage = mediaArray.length > 0 ? mediaArray[0] : "";
            return (
              <div class="relative py-4">
                <a href={`/portfolio/${item.slug}`} class="group block">
                  <img
                    class="aspect-[0.75] w-full rounded-sm object-cover transition-opacity duration-500 group-hover:opacity-40"
                    src={`/assets/portfolio/${firstImage}`}
                    alt={item.title}
                  />
                  <p class="absolute left-8 top-1/2 text-3xl font-bold opacity-0 transition-all duration-700 group-hover:translate-x-20 group-hover:opacity-100">
                    {item.title}
                  </p>
                </a>
              </div>
            );
          })}
        </div>
      );
    })
  }
</div>

<style>
  .column-reverse {
    transform: translateY(calc(-100% + 100vh));
  }
  @keyframes adjust-position {
    from {
      transform: translateY(calc(-100% + 100vh));
    }

    to {
      transform: translateY(calc(100% - 100vh));
    }
  }

  .column-reverse {
    animation: adjust-position linear forwards;
    animation-timeline: scroll(root block);
  }
</style>
