---
import Layout from "@/layouts/Layout.astro";
import AdminNavbar from "@/components/AdminNavbar.astro";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { writeFile } from "fs/promises";
import path from "path";
import { db } from "db";
import { eq } from "drizzle-orm";
import { portfolio } from "db/schema";
import { slugify } from "@/lib/utils";

const { locale, id } = Astro.params;

const res = await db.select().from(portfolio).where(eq(portfolio.slug, id!));

if (!res[0]) {
  return Astro.redirect("/admin/portfolio/new");
}

let filenames: string[] = JSON.parse(res[0].media as string);

if (Astro.request.method === "POST") {
  const res = await db.select().from(portfolio).where(eq(portfolio.slug, id!));
  filenames = JSON.parse(res[0].media as string);
  const formData = await Astro.request.formData();
  const title = formData.get("title") as string;
  const content = formData.get("content") as string;
  const slug = slugify(title);
  let additionalFilenames: string[] = [];
  for (const file of formData.getAll("file") as File[]) {
    if (file.name) {
      const buffer = Buffer.from(await file.arrayBuffer());
      await writeFile(path.join("./public/assets/portfolio", file.name), buffer);
      additionalFilenames.push(file.name);
    }
  }
  filenames.unshift(...additionalFilenames);
  await db
    .update(portfolio)
    .set({ title, slug, content, media: JSON.stringify(filenames), lang: "en" })
    .where(eq(portfolio.slug, id!));
  return Astro.redirect(`/admin/portfolio/${slug}`);
}
---

<Layout lang={locale!} title={res[0].title!}>
  <AdminNavbar />
  <div class="container px-8">
    <h1 class="title py-20 text-3xl">{res[0].title}</h1>
    <form method="POST" enctype="multipart/form-data" class="flex flex-col items-start gap-4">
      <Label htmlFor="title">title</Label>
      <Input type="text" name="title" required className="bg-transparent text-white" defaultValue={res[0].title as string} />
      <Label htmlFor="file">media</Label>
      <Input type="file" name="file" multiple accept="image/*, video/*" className="text-black" />
      {
        filenames.map((filename) => {
          return (
            <div class="flex items-center gap-4 px-6 py-2">
              <p>{filename}</p>
              <Button className="btn" variant="destructive">
                delete
              </Button>
            </div>
          );
        })
      }
      <Label htmlFor="content">description</Label>
      <Textarea name="content" className="bg-transparent text-white" defaultValue={res[0].content as string} rows={15} />
      <Button type="submit" variant="secondary">send</Button>
    </form>
  </div>
</Layout>

<script>
  import { actions } from "astro:actions";

  const buttons = document.querySelectorAll(".btn") as NodeListOf<HTMLButtonElement>;
  const title = document.querySelector(".title") as HTMLTitleElement;

  if (buttons) {
    buttons.forEach((button) => {
      button.addEventListener("click", async (e) => {
        e.preventDefault();
        const result = await actions.deleteMedia({
          title: title.textContent ?? "",
          item: button.previousElementSibling?.textContent ?? "",
        });
        if (result.data === "deleted") {
          button.parentElement?.remove();
        }
      });
    });
  }
</script>
