---
type Props = {
  accoladesData: {
    id: number;
    createdAt: Date;
    item: string | null;
  }[];
  storeDataMap: {
    projects: string;
    ctaHook: string;
    ctaButton: string;
  };
};

const { accoladesData, storeDataMap } = Astro.props;
const halfLength = Math.ceil(accoladesData.length / 2);
const firstHalf = accoladesData.slice(0, halfLength);
const secondHalf = accoladesData.slice(halfLength);
---

<>
  <div class="container py-20">
    <div class="mb-20 text-5xl font-bold leading-tight">
      <p>{storeDataMap.projects}</p>
    </div>
    <div class="py-20"></div>
    <div class="bar-char-wrapper text-5xl font-bold leading-tight">
      {
        storeDataMap.projects
          .split(/(\s)/)
          .map((word) => (
            <div class="word-wrapper inline-block">
              {word === " " ? (
                <span class="bar-char inline-block">&nbsp;</span>
              ) : (
                word.split("").map((char) => <span class="bar-char inline-block">{char}</span>)
              )}
            </div>
          ))
      }
    </div>
    <div class="my-40 flex justify-between gap-8">
      <p class="w-1/3 text-5xl font-bold">{storeDataMap.ctaHook}</p>
      <button class="rounded-full bg-wardGreen px-20 py-2 text-2xl font-bold text-slate-100 duration-300 hover:bg-wardBlue">
        {storeDataMap.ctaButton}
      </button>
    </div>
  </div>
  <div class="container flex gap-16 p-8 text-2xl font-bold">
    <div>
      {
        firstHalf.map((item) => {
          return <p class="mb-8">{item.item}</p>;
        })
      }
    </div>
    <div class="mt-40">
      {
        secondHalf.map((item) => {
          return <p class="mb-8">{item.item}</p>;
        })
      }
    </div>
  </div>
</>

<script>
  const barChars = document.querySelectorAll(".bar-char") as NodeListOf<HTMLElement>;
  gsap.fromTo(
    barChars,
    {
      scaleY: 0.1,
      scaleX: 1.8,
      filter: "blur(10px) brightness(50%)",
      willChange: "filter, transform",
    },
    {
      ease: "none",
      scaleY: 1,
      scaleX: 1,
      filter: "blur(0px) brightness(100%)",
      stagger: 0.05,
      scrollTrigger: {
        trigger: ".bar-char-wrapper",
        start: "top 85%",
        end: "bottom 30%",
        scrub: true,
      },
    }
  );
</script>
